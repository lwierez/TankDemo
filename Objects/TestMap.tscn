[gd_scene load_steps=6 format=2]

[ext_resource path="res://Objects/Player.tscn" type="PackedScene" id=1]

[sub_resource type="Shader" id=3]
code = "shader_type spatial;

uniform vec3 world_position;
varying vec3 pos;

void vertex()
{
	pos = world_position + VERTEX;
	
	VERTEX.y = (sin(pos.z) + sin(pos.x)) * .1f;
}

void fragment()
{
	ALBEDO = vec3( sin(pos.x), sin(pos.y), sin(pos.z)) * 255f;
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/world_position = null

[sub_resource type="PlaneMesh" id=1]
material = SubResource( 4 )
size = Vector2( 100, 100 )
subdivide_width = 100
subdivide_depth = 100

[sub_resource type="BoxShape" id=2]
extents = Vector3( 50, 1, 50 )

[node name="TestMap" type="Spatial"]

[node name="MeshInstance" type="MeshInstance" parent="."]
mesh = SubResource( 1 )
material/0 = null

[node name="StaticBody" type="StaticBody" parent="MeshInstance"]

[node name="CollisionShape" type="CollisionShape" parent="MeshInstance/StaticBody"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.5, 0 )
shape = SubResource( 2 )

[node name="Player" parent="." instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.339315, 0 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, 0.3577, 0.933837, 0, -0.933837, 0.3577, 0, 16.5089, 10.4623 )
